#spring.jpa.properties.hibernate.dialect = org.sqlite.hibernate.dialect.SQLiteDialect

# // FIXME unify the configuration through the app
spring.datasource.url=
spring.datasource.username=
spring.datasource.password=
# spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

### For better compatibility when running behind a proxy:
# see https://stackoverflow.com/questions/68318269/spring-server-forward-headers-strategy-native-vs-framework
server.forward-headers-strategy=framework
# this might or might not be needed too:
server.tomcat.remote_ip_header=x-forwarded-for
server.tomcat.protocol_header=x-forwarded-proto

server.tomcat.relaxed-query-chars=|,{,},[,]

# persistent sessions even after server restart (see https://stackoverflow.com/questions/28477199/enable-session-persistence-with-spring-boot-and-embedded-tomcat):
server.servlet.session.persistent=true
# uses the spring.datasource.* configuration details (username, password, etc.):
spring.session.store-type=jdbc
# database tables created manually from SQL at https://github.com/spring-projects/spring-session/blob/master/spring-session-jdbc/src/main/resources/org/springframework/session/jdbc/schema-mysql.sql:
spring.session.jdbc.table-name=SPRING_SESSION
# 86400 = 1 day
# 604800 = 1 week
spring.session.timeout.seconds=604800

server.tomcat.accesslog.enabled=true

# it is important to understand what the options means:
# 'directory/prefix + suffix + file-date-format' will be
# the file that tomcat will try to open.
# /dev/stdout is standard output, so we want tomcat
# to write to that fd. Then, we need to play with
# directory, prefix, suffix and file-date-format to match our desired path.
server.tomcat.accesslog.directory=/dev
server.tomcat.accesslog.prefix=stdout
server.tomcat.accesslog.buffered=false

# Don't use empty double quotes, see below
server.tomcat.accesslog.suffix=
server.tomcat.accesslog.file-date-format=

# Logging
logging.file.name=timesheet.log